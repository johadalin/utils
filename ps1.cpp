#include <iostream>
#include <string>
#include <vector>

std::string unicorn1 = R"(MUTHA FUCKIN UNICORN YEAAAAHHHHH\n                          ___________ _\n  \\/                    __/   .::::.-'-(/-/)\n                     _/:  .::::.-' .-'\\/\\_\`*******          __ (_))\n        \\/          /:  .::::./   -._-.  d\\|               (_))_(__))\n                     /: (\"\"\"\"/    '.  (__/||           (_))__(_))--(__))\n                      \\::).-'  -._  \\/ \\\/\\|\n              __ _ .-'\`)/  '-'. . '. |  (i_O\n          .-'      \\       -'      '\\|\n     _ _./      .-'|       '.  (    \\\\                         % % %\n  .-'   :      '_  \\         '-'\\  /|/      @ @ @             % % % %\n /      )\\_      '- )_________.-|_/^\\      @ @ @@@           % %\\/% %\n (   .-'   )-._-:  /        \\(/\\'-._ \`.     @|@@@@@            ..|........\n  (   )  _//_/|:  /          \`\\()   \`\\_\\     |/_@@             )'-._.-._.-\n   ( (   \\()^_/)_/             )/      \\\\    /                /   /\n    )  _.-\\\\.\\(_)__._.-'-.-'-.//_.-'-.-.)\\-'/._              /\n.-.-.-'   _o\\ \\\\\\     '::'   (o_ '-.-' |__\\'-.-;~ ~ ~ ~ ~ ~~/   /\\\n          \\ /  \\\\\\__          )_\\    .:::::::.-'\\          '- - -|\n     :::''':::::^)__\\:::::::::::::::::'''''''-.  \\                '- - - \n    :::::::  '''''''''''   ''''''''''''':::. -'\\  \\     C. SWANSIGER\n_____':::::_____________________________________\\__\\______________________\n)";

std::string unicorn2 = R"(AND WHAT'S THIS?!?! FUCKING PEGASUS TOOOOOOOO!!!!\n                   <<<<>>>>>>           .----------------------------.\n                _>><<<<>>>>>>>>>       /               _____________)\n       \\|/      \\<<<<<  < >>>>>>>>>   /            _______________)\n -------*--===<=<<           <<<<<<<>/         _______________)\n       /|\\     << @    _/      <<<<</       _____________)\n              <  \\    /  \\      >>>/      ________)  ____\n                  |  |   |       </      ______)____((- \\\\\\\\\n                  o_|   /        /      ______)         \\  \\\\\\\\    \\\\\\\\\\\\\\\n                       |  ._    (      ______)           \\  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n                       | /       \`----------'    /       /     \\\\\\\\\\\\\\     \\\\\n               .______/\\/     /                 /       /          \\\\\\\n              / __.____/    _/         ________(       /\\n             / / / ________/\`---------'         \\     /  \\_\n            / /  \\ \\                             \\   \\ \\_  \\n           ( <    \\ \\                             >  /    \\ \\n            \\/      \\\\_                          / /       > )\n                     \\_|                        / /       / /\n*-------------------------------*             _//       _//\n|  Pegasus@Leland.Stanford.EDU  |            /_|       /_|\n*-------------------------------*--------------------------------------------*)";



int main()
{

  std::vector<std::string> wheel {};

  std::string timestamp = "TIMESTAMP:HERE";
  int now = time(NULL);

  std::string input_ps1 = timestamp + unicorn2;  
  std::string output_ps1 = R"()";
  int wheel_position = 0;
  // wheel pos += offset;
  std::string prefix = R"(\[\033[38;5;)";
  for (char& c : input_ps1) 
  {
    std::string character_part = wheel[0];
//    std::string character_part = wheel[wheel_position] + R"(m\])" + c ;
 //   std::string character_part = wheel[wheel_position] + R"(m\])" + c ;
  //  output_ps1 += prefix + character_part;
    wheel_position++;
  }

//R"( \[\e[0;36m\]\w\[\e[m\] $(__git_ps1 "[\[\e[0;32m\]%s\[\e[0m\]]")\[\e[0;31m\]\$\[\e[0m\] )";
  output_ps1 += "HELLO";
  std::cout<<output_ps1<<std::endl;
  return(0);
}
